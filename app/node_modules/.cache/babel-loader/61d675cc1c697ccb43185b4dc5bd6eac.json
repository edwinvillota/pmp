{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nexport var registerUser = function registerUser(user, history) {\n  return function (dispatch) {\n    axios.post('http://localhost:5000/api/users', {\n      newUser: user\n    }).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    axios.post('http://localhost:5000/api/users/signin', {\n      user: user\n    }).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var logoutUser = function logoutUser(history) {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n  };\n};","map":{"version":3,"sources":["/home/edwin/Documentos/DEV/webproject/app/src/actions/authentication.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setAuthToken","jwt_decode","registerUser","user","history","dispatch","post","newUser","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,OAAP;AAAA,SAAmB,UAAAC,QAAQ,EAAI;AACvDR,IAAAA,KAAK,CAACS,IAAN,CAAW,iCAAX,EAA8C;AAACC,MAAAA,OAAO,EAAEJ;AAAV,KAA9C,EACSK,IADT,CACc,UAAAC,GAAG;AAAA,aAAIL,OAAO,CAACM,IAAR,CAAa,QAAb,CAAJ;AAAA,KADjB,EAESC,KAFT,CAEe,UAAAC,GAAG,EAAI;AACVP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEf,UADD;AAELgB,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CAAR;AAIH,KAPT;AAQH,GAT2B;AAAA,CAArB;AAWP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACd,IAAD;AAAA,SAAU,UAAAE,QAAQ,EAAI;AAC3CR,IAAAA,KAAK,CAACS,IAAN,CAAW,wCAAX,EAAqD;AAACH,MAAAA,IAAI,EAAEA;AAAP,KAArD,EACSK,IADT,CACc,UAAAC,GAAG,EAAI;AAAA,UACDS,KADC,GACST,GAAG,CAACO,IADb,CACDE,KADC;AAETC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAlB,MAAAA,YAAY,CAACkB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGpB,UAAU,CAACiB,KAAD,CAA1B;AACAb,MAAAA,QAAQ,CAACiB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,KAPT,EAQSV,KART,CAQe,UAAAC,GAAG,EAAI;AACVP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEf,UADD;AAELgB,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,OAAD,CAAR;AAIH,KAbT;AAcH,GAfwB;AAAA,CAAlB;AAiBP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,OAAO,EAAI;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAEd,gBADD;AAELe,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACnB,OAAD;AAAA,SAAa,UAAAC,QAAQ,EAAI;AACjDc,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,IAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAlB,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD,GALyB;AAAA,CAAnB","sourcesContent":["import axios from 'axios'\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'\nimport setAuthToken from '../setAuthToken'\nimport jwt_decode from 'jwt-decode'\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('http://localhost:5000/api/users', {newUser: user})\n            .then(res => history.push('/login'))\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const loginUser = (user) => dispatch => {\n    axios.post('http://localhost:5000/api/users/signin', {user: user})\n            .then(res => {\n                const { token } = res.data\n                localStorage.setItem('jwtToken', token)\n                setAuthToken(token)\n                const decoded = jwt_decode(token)\n                dispatch(setCurrentUser(decoded))\n            })\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\nexport const logoutUser = (history) => dispatch => {\n  localStorage.removeItem('jwtToken')\n  setAuthToken(false)\n  dispatch(setCurrentUser({}))\n  history.push('/login')\n}\n"]},"metadata":{},"sourceType":"module"}